// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package usercommons.actions;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import usercommons.proxies.CustomFlow;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class GetCustomFlows extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private final java.lang.String Prefix;

	public GetCustomFlows(
		IContext context,
		java.lang.String _prefix
	)
	{
		super(context);
		this.Prefix = _prefix;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		List<IMendixObject> list = new ArrayList<>();
		Set<String> microflows = Core.getMicroflowNames();
		for (String microflowName : microflows) {
			String microflowNameWithoutModule = microflowName.substring(microflowName.lastIndexOf('.') + 1);
			if (microflowNameWithoutModule.startsWith(Prefix)) {
				IMendixObject customUserEntityMember = Core.instantiate(getContext(),
						CustomFlow.entityName);
				customUserEntityMember.setValue(getContext(), CustomFlow.MemberNames.Name.name(),
						microflowName);
				list.add(customUserEntityMember);
			}
		}

		return list;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetCustomFlows";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
